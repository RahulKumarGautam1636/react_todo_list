{"version":3,"sources":["components/Heading.jsx","components/note.jsx","components/Form.jsx","components/footer.jsx","components/App.jsx","reportWebVitals.js","index.js"],"names":["Head","props","handleDayNight","setDay","isDay","className","onClick","style","display","xmlns","width","height","fill","fillRule","d","Note","dayFont","color","status","NightFont","noteBoxShadow","boxShadow","isCompleted","isActive","backgroundColor","background","handleChecks","id","stroke","strokeWidth","textDecoration","title","deleteNotes","TextArea","provided","snapshot","useState","note","setnote","task","setTask","setCompleted","setActive","viewport","setViewport","checkDuplicate","duplicateItem","filter","item","length","alert","console","log","preNote","addNote","clearCompleted","preTask","backGroundDay","backgroundImage","backGroundNight","notesOuterShadow","toggleButtonsColor","queries","small","onChange","matches","onSubmit","e","preventDefault","type","event","target","value","name","placeholder","autoComplete","onDragEnd","result","destination","items","Array","from","splice","source","index","reorderedItem","droppableId","droppableProps","ref","innerRef","map","draggableId","draggableProps","dragHandleProps","checkItem","noteItem","cursor","position","Owner","href","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e6b8a015.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction Head(props) {\r\n    // const [isSun, setSun] = useState(true);\r\n    function handleDayNight() {\r\n        \r\n        props.setDay(!props.isDay)\r\n    }\r\n    return (\r\n        <div className=\"head_container\">\r\n        <h1 className=\"head\">T O D O</h1>\r\n        <svg onClick={handleDayNight} style={{display: props.isDay===false? \"flex\": \"none\"}} xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\"><path fill=\"#FFF\" fillRule=\"evenodd\" d=\"M13 21a1 1 0 011 1v3a1 1 0 11-2 0v-3a1 1 0 011-1zm-5.657-2.343a1 1 0 010 1.414l-2.121 2.121a1 1 0 01-1.414-1.414l2.12-2.121a1 1 0 011.415 0zm12.728 0l2.121 2.121a1 1 0 01-1.414 1.414l-2.121-2.12a1 1 0 011.414-1.415zM13 8a5 5 0 110 10 5 5 0 010-10zm12 4a1 1 0 110 2h-3a1 1 0 110-2h3zM4 12a1 1 0 110 2H1a1 1 0 110-2h3zm18.192-8.192a1 1 0 010 1.414l-2.12 2.121a1 1 0 01-1.415-1.414l2.121-2.121a1 1 0 011.414 0zm-16.97 0l2.121 2.12A1 1 0 015.93 7.344L3.808 5.222a1 1 0 011.414-1.414zM13 0a1 1 0 011 1v3a1 1 0 11-2 0V1a1 1 0 011-1z\"/></svg>\r\n        <svg onClick={handleDayNight} style={{display: props.isDay? \"flex\": \"none\"}} xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\"><path fill=\"#FFF\" fillRule=\"evenodd\" d=\"M13 0c.81 0 1.603.074 2.373.216C10.593 1.199 7 5.43 7 10.5 7 16.299 11.701 21 17.5 21c2.996 0 5.7-1.255 7.613-3.268C23.22 22.572 18.51 26 13 26 5.82 26 0 20.18 0 13S5.82 0 13 0z\"/></svg>\r\n        </div>\r\n    )\r\n}\r\nexport default Head;","import React, { useState } from \"react\";\r\n// import ListItemText from '@material-ui/core/ListItemText';\r\n// import { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\n\r\n\r\nfunction Note(props) {\r\n\r\n    var dayFont = {color: props.status === false? \"hsl(235, 19%, 35%)\": \"hsl(233, 11%, 84%)\"};\r\n    var NightFont = {color: props.status === false? \"hsl(233, 11%, 84%)\": \"hsl(235, 19%, 35%)\"};\r\n    var noteBoxShadow = {boxShadow: props.isDay? \"rgba(0, 0, 0, 0.5) 0px 0px 1px 0px, rgba(27, 31, 35, 0.15) 0px 0px 0px 1px\" : \"rgba(255, 255, 255, 0.5) 0px 0px 1px 0px, rgba(27, 31, 35, 0.15) 0px 0px 0px 1px\"}\r\n    // var noteBorder = {border: \"0.001px solid white\"};\r\n\r\n    return (\r\n\r\n\r\n\r\n        <div style={{display: (props.isCompleted && props.status===false) || (props.isActive && props.status===true) ? \"none\": \"flex\", backgroundColor: props.isDay? \"hsl(0, 0%, 98%)\": \"hsl(235, 24%, 19%)\", boxShadow: noteBoxShadow.boxShadow}} className=\"note_container\">\r\n          <div className=\"check_container\">\r\n          <div style={{background: props.status? \"linear-gradient(hsl(192, 100%, 67%) , hsl(280, 87%, 65%))\": \"transparent\"}} onClick={() => {props.handleChecks()}} id=\"circle\">\r\n          <svg style={{display: props.status? \"flex\": \"none\"}} xmlns=\"http://www.w3.org/2000/svg\" width=\"11\" height=\"9\"><path fill=\"none\" stroke=\"#fff\" strokeWidth=\"2\" d=\"M1 4.304L3.696 7l6-6\"/></svg>\r\n          </div>\r\n          <p style={{textDecoration: props.status === false ? \"none\": \"line-through\", color: props.isDay ? dayFont.color: NightFont.color}}>{props.title}</p>\r\n          </div>\r\n            <svg onClick={props.deleteNotes} id=\"cross\" xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\"><path fill=\"#494C6B\" fillRule=\"evenodd\" d=\"M16.97 0l.708.707L9.546 8.84l8.132 8.132-.707.707-8.132-8.132-8.132 8.132L0 16.97l8.132-8.132L0 .707.707 0 8.84 8.132 16.971 0z\"/></svg>\r\n        </div>\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Note;\r\n","import React ,{useEffect, useState} from \"react\";\r\nimport Head from \"./Heading.jsx\";\r\nimport Note from \"./note.jsx\";\r\nimport Media from 'react-media';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\n// import ListItem from '@material-ui/core/ListItem';\r\n// import ListItemText from '@material-ui/core/ListItemText';\r\n// import { List } from 'react-window';\r\n\r\nfunction TextArea(props, provided: DroppableProvided, snapshot: DroppableStateSnapshot) {\r\n    const [note, setnote] = useState({title: \"\", status: \"\"});\r\n    const [task, setTask] = useState([\r\n      {title: \"Complete online javascript course\", status: true},\r\n      {title: \"Jog around the park 3x\", status: false},\r\n      {title: \"10 minutes meditation\", status: false},\r\n      {title: \"Read for 1 hour\", status: false},\r\n      {title: \"Pick up groceries\", status: false},\r\n      {title: \"Complete Todo App on Frontend Mentor\", status: false}\r\n    ]);\r\n    const [isCompleted, setCompleted] = useState(false);\r\n    const [isActive, setActive] = useState(false);\r\n    const [isDay, setDay] = useState(false);\r\n    const [viewport, setViewport] = useState(false);\r\n    // const [Listlength, setLength] = useState(86.3)\r\n    // const [characters, updateCharacters] = useState(task);\r\n\r\n    function addNote(note) {\r\n        if (note.length === 0 || note.title === \"\") {\r\n            console.log(\"please enter a valid task\");\r\n        } else {\r\n            setTask((preNote) => {\r\n                return [...preNote, note]\r\n            });\r\n        }\r\n    }\r\n\r\n    function checkDuplicate(note) {\r\n      const duplicateItem = (task.filter(item => item.title===note.title)).length;\r\n      if (duplicateItem===1) {\r\n        alert(\"Item Already Exist\");\r\n      } else {\r\n        addNote(note);\r\n        console.log(duplicateItem);\r\n        console.log(note);\r\n      }\r\n    }\r\n\r\n    function deleteNote(id) {\r\n        setTask((preNote) => {\r\n            return (\r\n                preNote.filter((noteItem, index) => {\r\n                    return index !== id;\r\n                })\r\n            )\r\n        })\r\n    }\r\n\r\n    function handleChange(event) {\r\n        const {name, value} = event.target;\r\n        setnote((preNote) => {\r\n            return {...preNote, title: value, status: false};\r\n        }\r\n        )\r\n    }\r\n\r\n    function handleClick(e) {\r\n        e.preventDefault();\r\n    }\r\n\r\n    function handleCheck(id) {\r\n        setTask(preTask => {\r\n            return (\r\n                preTask.map((checkItem, index) => {\r\n                      if (id===index) {\r\n                          return {title: checkItem.title, status: !checkItem.status};\r\n                      } else {\r\n                          return {...checkItem};\r\n                      }\r\n                })\r\n            )\r\n        })\r\n    }\r\n\r\n    function handleCompleted() {\r\n        setCompleted(true);\r\n        setActive(false);\r\n     }\r\n     function handleActive() {\r\n        setActive(true);\r\n        setCompleted(false);\r\n     }\r\n     function renderCompleted() {\r\n        setCompleted(false);\r\n        setActive(false);\r\n     }\r\n     function clearCompleted() {\r\n        setTask(preTask => {\r\n        return (\r\n            preTask.filter(item => item.status===false)\r\n        )\r\n        })\r\n     }\r\n     function dayNight() {\r\n        setDay(!isDay);\r\n    }\r\n    function setViewportWidth() {\r\n        setViewport(!viewport);\r\n    }\r\n    function handleOnDragEnd(result) {\r\n        if (!result.destination) return;\r\n        const items = Array.from(task);\r\n        const [reorderedItem] = items.splice(result.source.index, 1);\r\n        items.splice(result.destination.index, 0,  reorderedItem);\r\n        setTask(items);\r\n    }\r\n\r\n    var backGroundDay = {backgroundColor: \"hsl(0, 0%, 98%)\", backgroundImage: viewport? \"url(images/bg-mobile-light.jpg)\": \"url(images/bg-desktop-light.jpg)\"};\r\n    var backGroundNight = {backgroundColor: \"hsl(235, 21%, 11%)\", backgroundImage: viewport? \"url(images/bg-mobile-dark.jpg)\": \"url(images/bg-desktop-dark.jpg)\"};\r\n    // var noteBoxShadow = {boxShadow: isDay? \"rgba(0, 0, 0, 0.5) 0px 0px 1px 0px, rgba(27, 31, 35, 0.15) 0px 0px 0px 1px\" : \"rgba(255, 255, 255, 0.5) 0px 0px 1px 0px, rgba(27, 31, 35, 0.15) 0px 0px 0px 1px\"};\r\n    var noteBoxShadow = {};\r\n    var notesOuterShadow = {boxShadow: isDay ? \"rgba(50, 50, 93, 0.40) 0px 50px 100px -20px, rgba(0, 0, 0, 0.5) 0px 30px 60px -30px\": \"rgba(0, 0, 0, 0.50) 0px 50px 100px -20px, rgba(0, 0, 0, 0.4) 0px 30px 60px -30px\"};\r\n    // var notesOuterShadow = {};\r\n    var toggleButtonsColor = {color: isDay? \"hsl(235, 19%, 35%)\": \"hsl(233, 11%, 84%)\"};\r\n    // var sectionsHeight = {minHeight: \"86.5rem\", border: \"1px solid red\"};\r\n    return (\r\n        <section style={isDay?backGroundDay:backGroundNight}>\r\n                <Media queries={{small: \"(max-width: 800px)\"}}\r\n            onChange={matches =>\r\n                matches.small\r\n                ? setViewport(true)\r\n                : setViewport(false)\r\n          }\r\n        />\r\n           <div className=\"form_container\">\r\n           <Head isDay={isDay} setDay={setDay}/>\r\n           <form className=\"form\" onSubmit={handleClick}>\r\n            <div style={{backgroundColor: isDay? \"white\": \"hsl(235, 24%, 19%)\"}} id=\"inputField_container\">\r\n            <div id=\"circle\">\r\n            <button className=\"submitNoteButton\" onClick={() => {checkDuplicate(note); setnote({title: \"\", status: false});}} type=\"submit\"></button>\r\n            </div>\r\n            <input style={{color: isDay? \"hsl(235, 19%, 35%)\": \"hsl(0, 0%, 98%)\"}} id=\"inputField\" onChange={handleChange} type=\"text\" value={note.title}  placeholder=\"Create a new todo..\" autoComplete=\"off\"/>\r\n            <svg id=\"input_check\" onClick={() => {checkDuplicate(note); setnote({title: \"\", status: false});}} xmlns=\"http://www.w3.org/2000/svg\" width=\"11\" height=\"9\"><path fill=\"none\" stroke={isDay? \"hsl(235, 19%, 35%)\": \"hsl(233, 11%, 84%)\"} strokeWidth=\"2\" d=\"M1 4.304L3.696 7l6-6\"/></svg>\r\n            </div>\r\n            <div style={notesOuterShadow} className=\"handle_outer_shadow\">\r\n\r\n            <DragDropContext onDragEnd={handleOnDragEnd}>\r\n            <Droppable droppableId=\"characters\">\r\n            {(provided) => (\r\n            <ul className=\"characters\" {...provided.droppableProps} ref={provided.innerRef}>\r\n            {task.map((item, index) => {\r\n               return (\r\n                   <Draggable key={item.title} draggableId={item.title} index={index}>\r\n                   {(provided) => (\r\n                     <li {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}>\r\n\r\n                   <Note\r\n                    title={item.title}\r\n                    handleChecks={() => {handleCheck(index)}}\r\n                    deleteNotes={() => {deleteNote(index)}}\r\n                    status={item.status}\r\n                    isCompleted={isCompleted}\r\n                    isActive={isActive}\r\n                    isDay={isDay}\r\n                    />\r\n\r\n                    </li>\r\n                  )}\r\n                  </Draggable>\r\n                    )\r\n                  }\r\n               )}\r\n               {provided.placeholder}\r\n               </ul>\r\n           )}\r\n\r\n          </Droppable>\r\n          </DragDropContext>\r\n\r\n\r\n\r\n          </div>\r\n\r\n\r\n           <div id=\"todoStatus\" style={{display: viewport && task.length!==0 ? \"flex\": \"none\", backgroundColor: isDay? \"white\": \"hsl(235, 24%, 19%)\", boxShadow: noteBoxShadow.boxShadow}} className=\"buttons_container\">\r\n           <p> {(task.filter(item => item.status===isCompleted? true: false)).length} items {isCompleted? \"completed\": \"left\"}</p>\r\n           <button type=\"button\" onClick={clearCompleted}><p>Clear Completed</p></button>\r\n           </div>\r\n           <div style={notesOuterShadow} className=\"handle_outer_shadow\">\r\n           <div style={{display: task.length===0 ? \"none\" : \"flex\"}} className=\"handle_outer_shadow\">\r\n           <div style={{backgroundColor: isDay? \"white\": \"hsl(235, 24%, 19%)\", boxShadow: noteBoxShadow.boxShadow}} className=\"buttons_container\">\r\n            <p style={{display: viewport ? \"none\": \"flex\"}}> {(task.filter(item => item.status===isCompleted? true: false)).length} items {isCompleted? \"completed\": \"left\"}</p>\r\n            <div className=\"toggleButtons\">\r\n            <button type=\"button\" onClick={renderCompleted}><p style={{color: (isActive===false&&isCompleted===false&&task.length!==0)? \"hsl(220, 98%, 61%)\": toggleButtonsColor.color}}>All</p></button>\r\n            <button type=\"button\" onClick={handleActive}><p style={{color: (isActive&&task.length!==0)? \"hsl(220, 98%, 61%)\": toggleButtonsColor.color}}>Active</p></button>\r\n            <button type=\"button\" onClick={handleCompleted}><p style={{color: (isCompleted&&task.length!==0)? \"hsl(220, 98%, 61%)\": toggleButtonsColor.color}}>Completed</p></button>\r\n            </div>\r\n            <button style={{display: viewport? \"none\": \"flex\"}} type=\"button\" onClick={clearCompleted}><p>Clear Completed</p></button>\r\n            </div>\r\n            </div>\r\n            </div>\r\n           </form>\r\n        </div>\r\n        <div style={{cursor: 'move', position: 'absolute', width: '100%'}}>\r\n        <p className=\"order\">Drag and drop to reorder the list</p>\r\n        </div>\r\n        </section>\r\n    )\r\n}\r\nexport default TextArea;\r\n","\r\n\r\n\r\nfunction Owner() {\r\n  return (\r\n    <div className=\"attribution\">\r\n     Challenge by <a href=\"https://www.frontendmentor.io?ref=challenge\" target=\"_blank\">Frontend Mentor</a>.\r\n     Coded by <a href=\"#\">Rahul Kumar Gautam</a>.\r\n    </div>\r\n  )\r\n}\r\nexport default Owner;\r\n","import React, { useState } from \"react\";\r\nimport TextArea from \"./Form.jsx\";\r\nimport Owner from \"./footer.jsx\";\r\n\r\n\r\nfunction App() {\r\n\r\n\r\n    return (\r\n        <div>\r\n        <TextArea />\r\n        <Owner/>\r\n        </div>\r\n    )\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n// import styles from '/public/styles.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}