{"version":3,"sources":["components/Heading.jsx","components/note.jsx","components/Form.jsx","components/footer.jsx","components/App.jsx","reportWebVitals.js","index.js"],"names":["Head","props","handleDayNight","setDay","isDay","className","onClick","style","display","xmlns","width","height","fill","fillRule","d","Note","dayFont","color","status","NightFont","noteBoxShadow","boxShadow","isCompleted","isActive","backgroundColor","border","background","handleChecks","id","stroke","strokeWidth","textDecoration","title","deleteNotes","TextArea","useState","ids","note","setnote","task","setTask","setCompleted","setActive","viewport","setViewport","clearCompleted","preTask","filter","item","backGroundDay","backgroundImage","backGroundNight","toggleButtonsColor","queries","small","onChange","matches","onSubmit","e","preventDefault","length","console","log","preNote","addNote","type","event","target","value","name","placeholder","autoComplete","onDragEnd","result","destination","items","Array","from","splice","source","index","reorderedItem","droppableId","provided","droppableProps","ref","innerRef","map","draggableId","draggableProps","dragHandleProps","checkItem","noteItem","Math","random","cursor","position","Owner","href","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2fb9f2cf.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction Head(props) {\r\n    // const [isSun, setSun] = useState(true);\r\n    function handleDayNight() {\r\n        \r\n        props.setDay(!props.isDay)\r\n    }\r\n    return (\r\n        <div className=\"head_container\">\r\n        <h1 className=\"head\">T O D O</h1>\r\n        <svg onClick={handleDayNight} style={{display: props.isDay===false? \"flex\": \"none\"}} xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\"><path fill=\"#FFF\" fillRule=\"evenodd\" d=\"M13 21a1 1 0 011 1v3a1 1 0 11-2 0v-3a1 1 0 011-1zm-5.657-2.343a1 1 0 010 1.414l-2.121 2.121a1 1 0 01-1.414-1.414l2.12-2.121a1 1 0 011.415 0zm12.728 0l2.121 2.121a1 1 0 01-1.414 1.414l-2.121-2.12a1 1 0 011.414-1.415zM13 8a5 5 0 110 10 5 5 0 010-10zm12 4a1 1 0 110 2h-3a1 1 0 110-2h3zM4 12a1 1 0 110 2H1a1 1 0 110-2h3zm18.192-8.192a1 1 0 010 1.414l-2.12 2.121a1 1 0 01-1.415-1.414l2.121-2.121a1 1 0 011.414 0zm-16.97 0l2.121 2.12A1 1 0 015.93 7.344L3.808 5.222a1 1 0 011.414-1.414zM13 0a1 1 0 011 1v3a1 1 0 11-2 0V1a1 1 0 011-1z\"/></svg>\r\n        <svg onClick={handleDayNight} style={{display: props.isDay? \"flex\": \"none\"}} xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\"><path fill=\"#FFF\" fillRule=\"evenodd\" d=\"M13 0c.81 0 1.603.074 2.373.216C10.593 1.199 7 5.43 7 10.5 7 16.299 11.701 21 17.5 21c2.996 0 5.7-1.255 7.613-3.268C23.22 22.572 18.51 26 13 26 5.82 26 0 20.18 0 13S5.82 0 13 0z\"/></svg>\r\n        </div>\r\n    )\r\n}\r\nexport default Head;","import React, { useState } from \"react\";\r\n// import { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\n\r\n\r\nfunction Note(props) {\r\n\r\n    var dayFont = {color: props.status === false? \"hsl(235, 19%, 35%)\": \"hsl(233, 11%, 84%)\"};\r\n    var NightFont = {color: props.status === false? \"hsl(233, 11%, 84%)\": \"hsl(235, 19%, 35%)\"};\r\n    var noteBoxShadow = {boxShadow: props.isDay? \"rgba(0, 0, 0, 0.5) 0px 0px 1px 0px, rgba(27, 31, 35, 0.15) 0px 0px 0px 1px\" : \"rgba(255, 255, 255, 0.5) 0px 0px 1px 0px, rgba(27, 31, 35, 0.15) 0px 0px 0px 1px\"}\r\n\r\n\r\n    return (\r\n\r\n\r\n\r\n        <div style={{display: (props.isCompleted && props.status===false) || (props.isActive && props.status===true) ? \"none\": \"flex\", backgroundColor: props.isDay? \"hsl(0, 0%, 98%)\": \"hsl(235, 24%, 19%)\", boxShadow: noteBoxShadow.boxShadow, border: \"1px solid blackk \"}} className=\"note_container\">\r\n          <div className=\"check_container\">\r\n          <div style={{background: props.status? \"linear-gradient(hsl(192, 100%, 67%) , hsl(280, 87%, 65%))\": \"transparent\"}} onClick={() => {props.handleChecks()}} className=\"circles\" id=\"circle\">\r\n          <svg style={{display: props.status? \"flex\": \"none\"}} xmlns=\"http://www.w3.org/2000/svg\" width=\"11\" height=\"9\"><path fill=\"none\" stroke=\"#fff\" strokeWidth=\"2\" d=\"M1 4.304L3.696 7l6-6\"/></svg>\r\n          </div>\r\n          <p style={{textDecoration: props.status === false ? \"none\": \"line-through\", color: props.isDay ? dayFont.color: NightFont.color}}>{props.title}</p>\r\n          </div>\r\n            <svg onClick={props.deleteNotes} id=\"cross\" xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\"><path fill=\"#494C6B\" fillRule=\"evenodd\" d=\"M16.97 0l.708.707L9.546 8.84l8.132 8.132-.707.707-8.132-8.132-8.132 8.132L0 16.97l8.132-8.132L0 .707.707 0 8.84 8.132 16.971 0z\"/></svg>\r\n        </div>\r\n    \r\n\r\n\r\n    )\r\n}\r\n\r\n// function Notes() {\r\n//     return (\r\n//     note.map(Note)\r\n//     )\r\n// }\r\n\r\n// <DragDropContext>\r\n// <Droppable droppableId=\"characters\">\r\n// {(provided) => (\r\n\r\n// )}\r\n// </Droppable>\r\n// </DragDropContext>\r\n\r\nexport default Note;\r\n","import React ,{useEffect, useState} from \"react\";\r\nimport Head from \"./Heading.jsx\";\r\nimport Note from \"./note.jsx\";\r\nimport Media from 'react-media';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\n\r\nfunction TextArea(props) {\r\n    const [note, setnote] = useState({title: \"\", status: \"\", ids: \"\"});\r\n    const [task, setTask] = useState([\r\n        {title: \"Complete online javascript course\", status: true, ids: \"one\"},\r\n        {title: \"Jog around the park 3x\", status: false, ids: \"two\"},\r\n        {title: \"10 minutes meditation\", status: false, ids: \"three\"},\r\n        {title: \"Read for 1 hour\", status: false, ids: \"four\"},\r\n        {title: \"Pick up groceries\", status: false, ids: \"five\"},\r\n        {title: \"Complete Todo App on Frontend Mentor\", status: false, ids: \"six\"}\r\n    ]);\r\n    const [isCompleted, setCompleted] = useState(false);\r\n    const [isActive, setActive] = useState(false);\r\n    const [isDay, setDay] = useState(true);\r\n    const [viewport, setViewport] = useState(false);\r\n    // const [characters, updateCharacters] = useState(task);\r\n\r\n\r\n    function addNote(note) {\r\n        if (note.length === 0 || note.title === \"\") {\r\n            console.log(\"please enter a valid task\");\r\n        } else {\r\n            setTask((preNote) => {\r\n                return [...preNote, note]\r\n            });\r\n        }\r\n    }\r\n    function deleteNote(id) {\r\n        setTask((preNote) => {\r\n            return (\r\n                preNote.filter((noteItem, index) => {\r\n                    return index !== id;\r\n                })\r\n            )\r\n        })\r\n    }\r\n    function handleChange(event) {\r\n        const {name, value} = event.target;\r\n        setnote((preNote) => {\r\n            return {...preNote, title: value, status: false};\r\n        }\r\n        )\r\n    }\r\n    function handleClick(e) {\r\n        e.preventDefault();\r\n    }\r\n    function handleCheck(id) {\r\n        setTask(preTask => {\r\n            return (\r\n                preTask.map((checkItem, index) => {\r\n                      if (id===index) {\r\n                          return {title: checkItem.title, status: !checkItem.status};\r\n                      } else {\r\n                          return {...checkItem};\r\n                      }\r\n                })\r\n            )\r\n        })\r\n    }\r\n    function handleCompleted() {\r\n        setCompleted(true);\r\n        setActive(false);\r\n     }\r\n     function handleActive() {\r\n        setActive(true);\r\n        setCompleted(false);\r\n     }\r\n     function renderCompleted() {\r\n        setCompleted(false);\r\n        setActive(false);\r\n     }\r\n     function clearCompleted() {\r\n        setTask(preTask => {\r\n        return (\r\n            preTask.filter(item => item.status===false)\r\n        )\r\n        })\r\n     }\r\n     function dayNight() {\r\n        setDay(!isDay);\r\n    }\r\n    function setViewportWidth() {\r\n        setViewport(!viewport);\r\n    }\r\n    function handleOnDragEnd(result) {\r\n        if (!result.destination) return;\r\n        const items = Array.from(task);\r\n        const [reorderedItem] = items.splice(result.source.index, 1);\r\n        items.splice(result.destination.index, 0,  reorderedItem);\r\n        setTask(items);\r\n    }\r\n\r\n    var backGroundDay = {backgroundColor: \"hsl(0, 0%, 98%)\", backgroundImage: viewport? \"url(images/bg-mobile-light.jpg)\": \"url(images/bg-desktop-light.jpg)\"};\r\n    // var backGroundDay = {}\r\n    var backGroundNight = {backgroundColor: \"hsl(235, 21%, 11%)\", backgroundImage: viewport? \"url(images/bg-mobile-dark.jpg)\": \"url(images/bg-desktop-dark.jpg)\"};\r\n    // var backGroundNight = {}\r\n    var noteBoxShadow = {boxShadow: isDay? \"rgba(0, 0, 0, 0.5) 0px 0px 1px 0px, rgba(27, 31, 35, 0.15) 0px 0px 0px 1px\" : \"rgba(255, 255, 255, 0.5) 0px 0px 1px 0px, rgba(27, 31, 35, 0.15) 0px 0px 0px 1px\"};\r\n    // var noteBoxShadow = {}\r\n    var notesOuterShadow = {boxShadow: \"rgba(255, 255, 255, 0.1) 0px 1px 1px 0px inset, rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.2) 0px 30px 60px -30px\"};\r\n    // var notesOuterShadow = {}\r\n    var toggleButtonsColor = {color: isDay? \"hsl(235, 19%, 35%)\": \"hsl(233, 11%, 84%)\"}\r\n    return (\r\n        <section style={isDay?backGroundDay:backGroundNight}>\r\n                <Media queries={{small: \"(max-width: 800px)\"}}\r\n            onChange={matches =>\r\n                matches.small\r\n                ? setViewport(true)\r\n                : setViewport(false)\r\n          }\r\n        />\r\n           <div className=\"form_container\">\r\n           <Head isDay={isDay} setDay={setDay}/>\r\n           <form className=\"form\" onSubmit={handleClick}>\r\n            <div style={{backgroundColor: isDay? \"white\": \"hsl(235, 24%, 19%)\"}} id=\"inputField_container\">\r\n            <div id=\"circle\">\r\n            <button className=\"submitNoteButton\" onClick={() => {addNote(note); setnote({title: \"\"});}} type=\"submit\"></button>\r\n            </div>\r\n            <input style={{color: isDay? \"hsl(235, 19%, 35%)\": \"hsl(0, 0%, 98%)\"}} id=\"inputField\" onChange={handleChange} type=\"text\" value={note.title}  placeholder=\"Create a new todo..\" autoComplete=\"off\"/>\r\n\r\n            </div>\r\n            <div className=\"handle_outer_shadow\">\r\n            <DragDropContext onDragEnd={handleOnDragEnd}>\r\n            <Droppable droppableId=\"characters\">\r\n            {(provided) => (\r\n            <ul className=\"characters\" {...provided.droppableProps} ref={provided.innerRef}>\r\n            {task.map((item, index) => {\r\n               return (\r\n                   <Draggable key={item.title} draggableId={item.title} index={index}>\r\n                   {(provided) => (\r\n                     <li {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}>\r\n                   <Note\r\n                    key={Math.random()*1000}\r\n                    id={index}\r\n                    title={item.title}\r\n                    handleChecks={() => {handleCheck(index)}}\r\n                    deleteNotes={() => {deleteNote(index)}}\r\n                    status={item.status}\r\n                    isCompleted={isCompleted}\r\n                    isActive={isActive}\r\n                    isDay={isDay}\r\n                    />\r\n                    </li>\r\n                  )}\r\n                  </Draggable>\r\n                    )\r\n                  }\r\n               )}\r\n               {provided.placeholder}\r\n               </ul>\r\n           )}\r\n          </Droppable>\r\n          </DragDropContext>\r\n          </div>\r\n\r\n\r\n           <div id=\"todoStatus\" style={{display: viewport? \"flex\": \"none\", backgroundColor: isDay? \"white\": \"hsl(235, 24%, 19%)\", boxShadow: noteBoxShadow.boxShadow}} className=\"buttons_container\">\r\n           <p> {(task.filter(item => item.status===isCompleted? true: false)).length} items {isCompleted? \"completed\": \"left\"}</p>\r\n           <button type=\"button\" onClick={clearCompleted}><p>Clear Completed</p></button>\r\n           </div>\r\n           <div className=\"handle_outer_shadow\">\r\n           <div style={{backgroundColor: isDay? \"white\": \"hsl(235, 24%, 19%)\", boxShadow: noteBoxShadow.boxShadow}} className=\"buttons_container\">\r\n            <p style={{display: viewport? \"none\": \"flex\"}}> {(task.filter(item => item.status===isCompleted? true: false)).length} items {isCompleted? \"completed\": \"left\"}</p>\r\n            <div style={{noteBoxShadow}} className=\"toggleButtons\">\r\n            <button type=\"button\" onClick={renderCompleted}><p style={{color: (isActive===false&&isCompleted===false&&task.length!==0)? \"hsl(220, 98%, 61%)\": toggleButtonsColor.color}}>All</p></button>\r\n            <button type=\"button\" onClick={handleActive}><p style={{color: (isActive&&task.length!==0)? \"hsl(220, 98%, 61%)\": toggleButtonsColor.color}}>Active</p></button>\r\n            <button type=\"button\" onClick={handleCompleted}><p style={{color: (isCompleted&&task.length!==0)? \"hsl(220, 98%, 61%)\": toggleButtonsColor.color}}>Completed</p></button>\r\n            </div>\r\n            <button style={{display: viewport? \"none\": \"flex\"}} type=\"button\" onClick={clearCompleted}><p>Clear Completed</p></button>\r\n            </div>\r\n            </div>\r\n           </form>\r\n        </div>\r\n        <div style={{cursor: 'move', position: 'absolute', width: '100%'}}>\r\n        <p className=\"order\">Drag and drop to reorder the list</p>\r\n        </div>\r\n        </section>\r\n    )\r\n}\r\nexport default TextArea;\r\n","\r\n\r\n\r\nfunction Owner() {\r\n  return (\r\n    <div className=\"attribution\">\r\n     Challenge by <a href=\"https://www.frontendmentor.io?ref=challenge\" target=\"_blank\">Frontend Mentor</a>.\r\n     Coded by <a href=\"#\">Rahul Kumar Gautam</a>.\r\n    </div>\r\n  )\r\n}\r\nexport default Owner;\r\n","import React, { useState } from \"react\";\r\nimport TextArea from \"./Form.jsx\";\r\nimport Owner from \"./footer.jsx\";\r\n\r\n\r\nfunction App() {\r\n\r\n\r\n    return (\r\n        <div>\r\n        <TextArea />\r\n        <Owner/>\r\n        </div>\r\n    )\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n// import styles from '/public/styles.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}